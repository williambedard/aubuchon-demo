{%- capture close_icon -%}
  {% render 'icon' icon: 'close', icon_size: 24 %}
{%- endcapture -%}

{%- capture chevron_icon -%}
  {% render 'icon' icon: 'chevron' %}
{%- endcapture -%}

{%- capture zoom_icon -%}
  {% render 'icon' icon: 'zoom' %}
  <span class="zoom-icon__text zoom-in fs-body-75">{{ 'general.accessibility.zoom_in' | t }}</span>
  <span class="zoom-icon__text zoom-out fs-body-75">{{ 'general.accessibility.zoom_out' | t }}</span>
{%- endcapture -%}

<script>
  console.log('Cornerstone v1.3.4 by Fluorescent');

  document.documentElement.className = document.documentElement.className.replace('no-js', '');

  if (window.matchMedia(`(prefers-reduced-motion: reduce)`) === true || window.matchMedia(`(prefers-reduced-motion: reduce)`).matches === true) {
    document.documentElement.classList.add('prefers-reduced-motion');
  } else {
    document.documentElement.classList.add('do-anim');
  }

  window.theme = {
    version: 'v1.3.4',
    themeName: 'Cornerstone',
    moneyFormat: {{ shop.money_format | json }},
    coreData: {
      n: "Cornerstone",
      v: "v1.3.4",
    },
    strings: {
      name: {{ shop.name | json }},
      accessibility: {
        play_video: {{ 'general.accessibility.play' | t | json }},
        pause_video: {{ 'general.accessibility.pause' | t | json }},
        range_lower: {{ 'general.accessibility.range_lower' | t | json }},
        range_upper: {{ 'general.accessibility.range_upper' | t | json }},
        carousel_select:  {{ 'general.accessibility.carousel_select' | t | json }}
      },
      product: {
        no_shipping_rates: {{ 'products.product.no_rates' | t | json }},
        country_placeholder: {{ 'products.product.country_placeholder' | t | json }},
        review: {{ 'products.product.write_a_review' | t | json }}
      },
      products: {
        product: {
          unavailable: {{ 'products.product.unavailable' | t | json }},
          unitPrice: {{ 'products.product.unit_price_label' | t | json }},
          unitPriceSeparator: {{ 'general.accessibility.unit_price_separator' | t | json }},
          sku: {{ 'products.product.sku' | t | json }}
        }
      },
      cart: {
        editCartNote: {{ 'cart.general.order_note_button_edit' | t | json }},
        addCartNote: {{ 'cart.general.order_note_button_add' | t | json }},
        quantityError: {{ 'cart.general.error' | t | json }}
      },
      pagination: {
        viewing: {{ 'general.pagination.viewing' | t | json }},
        products: {{ 'general.pagination.products' | t | json }},
        results: {{ 'general.pagination.results' | t | json }}
      }
    },
    routes: {
      root: "{{ routes.root_url }}",
      cart: {
        base: "{{ routes.cart_url }}",
        add: "{{ routes.cart_add_url }}",
        change: "{{ routes.cart_change_url }}",
        update: "{{ routes.cart_update_url }}",
        clear: "{{ routes.cart_clear_url }}",
        // Manual routes until Shopify adds support
        shipping: "{% if routes.root_url == '/' %}/cart/shipping_rates{% else %}{{ routes.root_url }}/cart/shipping_rates{% endif %}"
      },
      // Manual routes until Shopify adds support
      products: "{% if routes.root_url == '/' %}/products{% else %}{{ routes.root_url }}/products{% endif %}",
      productRecommendations: "{{ routes.product_recommendations_url }}",
      predictive_search_url: '{{ routes.predictive_search_url }}',
      search_url: '{{ routes.search_url }}'
    },
    icons: {
      chevron: {{ chevron_icon | json }},
      close: {{ close_icon | json }},
      zoom: {{ zoom_icon | json }}
    }
  }

  {% liquid
    assign searchable_fields = 'author, body, product_type, tag, title, variant_barcode, variant_sku, variant_title, vendor' | split: ', '
    capture searchable_field_params
      for field in searchable_fields
        capture field_key
          echo 'searchable_fields_' | append: field
        endcapture

        if settings[field_key]
          case field
            when 'variant_barcode'
              echo 'variants.barcode,'
            when 'variant_sku'
              echo 'variants.sku,'
            when 'variant_title'
              echo 'variants.title,'
            else
              echo field | append: ','
          endcase
        endif
      endfor
    endcapture
  -%}

  {% if searchable_field_params != blank -%}
    window.theme.searchableFields = "{{ searchable_field_params | remove_last: ',' }}";
  {%- endif %}

  {% if template.directory == 'customers' or template == 'product' %}
    window.theme.allCountryOptionTags = {{ all_country_option_tags | json }};
  {% endif %}
</script>
